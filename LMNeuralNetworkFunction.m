function [y1] = LMNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function Levenberg-Marquadt algorithm.
%
% Generated by Neural Network Toolbox function genFunction, 11-Jan-2017 20:26:14.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx30 matrix, input #1
% and returns:
%   y = Qx2 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [9.878;0;7.33;0.12;0;13.602;-18.066;0.228;0.004;110.601;0.047;-1.414;0;20;-2.496;-3.141;26.001;-2.487;-3.142;0.2;-3.142;22.71;2;30.196;-4.497;-3.142;30;-4.5;-3.142;60.223];
x1_step1.gain = [0.002044318786983;0.00289823569901822;0.00151219242951104;0.00189809687317012;0.235211101964013;0.000403113893582366;0.0575440211761998;0.373761913660998;0.00389366403519872;0.00114819724421179;0.101389029706986;0.707213578500707;2;0.00331750881627968;0.400560785099139;0.318319274232055;0.00458826093439934;0.401123144805455;0.318319274232055;0.00210268902385816;0.318268618714195;0.00100945557032726;2;0.00183422797802962;0.222321031569587;0.318319274232055;0.00289244724176231;0.222222222222222;0.318268618714195;0.0012712860965796];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.9998060478602708;12.070723177850994;3.4302345666237257;9.7590437832186847;32.318429091471302;4.4192730007294285;-11.271882317075329;-2.2713764930102363;3.2021135098077922;-2.9117240516277909];
IW1_1 = [1.4126292837688994 4.5436974445245761 1.9868959210125314 2.0796051627752306 -0.3458553398727735 -0.40540193740558933 -0.058892323856631193 -2.6488279683752478 -2.0330178701093593 -1.9279621465040859 3.2568010781858141 -0.79311571317771568 0.046618663298369674 -2.1110853648328645 -0.19007607670688292 -0.10207071492593482 -4.9403734689192325 0.054286742167068011 0.027523386029761527 -1.1803384218920627 0.08045464586876569 -0.21533905146427346 -0.062575894133100704 -2.0251241456048232 0.10158860284693107 0.0074356537227855974 -2.1798026057389324 0.022096540690872305 -0.041954491731781549 1.2533722601253676;3.2715834143684757 3.2389654967347798 13.695102135558599 1.8010400748403843 0.2119417421117305 -2.3849560532423095 -0.049909911491146375 0.66520477405853773 -0.061333776576506994 1.5268729183385208 1.9629116610417732 -0.0073038910320355381 -0.050290285099082566 -5.0960132436626315 0.045630129355364347 -0.020147250490520727 -4.0393457272286604 0.035357796298945303 -0.01418547315769169 1.2400505486501134 -0.009476681016480833 0.59066622649434186 0.031786961713701628 0.1613459526256818 -0.042302332649841873 0.0030247568504263257 0.20939001616983005 -0.011422256869987098 -0.013555583313733511 -1.4828981777098889;1.518146036581421 -4.6440372366910871 -7.2424630465900055 0.41180179632688624 0.1207495059870396 1.8697888814929382 0.3882014769238149 0.47434704141427469 3.0588381030608183 1.4409440279202341 -0.9102414274129037 0.2193052690606937 0.065456129411812961 5.8152839135566632 -0.0029658421559973737 0.033135945088555288 1.1499558716665701 -0.087070915406415247 -0.069104627609707037 -0.26957586850996434 0.035156759127912177 -0.033622512008183551 0.065144335885996121 0.77884176496444535 0.12533609062723855 -0.019342684319399783 0.28083729960593556 0.011796916332160241 -0.034803075970712145 -1.7766814840128784;-0.041539312701205144 -0.93178218998606266 -0.54248282467780373 1.1830742857303247 -0.11681946636361022 0.086924327284384387 -0.35239801175335533 0.044031880023161801 -1.6607879683038427 5.4346792386233034 -3.3193085686952983 0.063727656887564599 0.0023926909420362097 1.8492801191209522 -0.031182082387259693 0.056069137718835559 3.4016041072457384 0.019809303801382794 0.0060803235634886337 -1.0983501492848338 -0.051265706331867084 1.7091903174422565 0.032419617803617573 3.5259172948931723 -0.019435525626195053 -0.023551915941781541 -0.45339357692369708 -0.039605184423603029 0.02173864468782577 -1.1355874072372916;17.77652470853776 0.81663670986071757 20.81430250061041 3.8765718904870301 -0.74448423053356794 3.1645736892256502 -0.2421550090020215 0.43405757390225286 -0.42634571437655572 7.4736832603146359 1.4462812499943778 0.30727841175385767 0.23855709566017647 -3.7945372073597694 0.04172643907421094 0.027892911681460682 -4.6220773310160084 -0.0498152497199379 -0.026170369271849361 1.6949216817846799 -0.0057053629226614293 -1.1626259990269476 -0.06426916489084146 -1.3151874282833758 0.060359719187532475 0.0027863152219024818 -0.24524745524865901 0.0058058191709536942 -0.018484383738696441 -6.7285013930067086;0.62925419701030549 -2.7419677720327948 2.8941177120943467 0.62775759333268621 0.051424560449614326 0.71296390328489001 0.094822763913703562 0.06541013090254022 0.094826771478376676 2.2644114432538895 -0.81180412249563838 0.30878340529386022 -0.033847560450843847 -0.47962644121613812 0.064114315743807049 0.030116342624048574 0.19758745037253245 -0.044016860777021091 -0.036051514149050654 0.89997230032483344 -0.050826215065401005 0.81935755441562819 0.057067252819902471 -0.84461555466644622 0.032921449290601888 0.0013900681443020015 -0.32639951348540114 -0.028726512346293212 -0.016597748269870073 0.067306390498278662;-3.3255444666456895 -3.3093848786937259 -13.039203625195249 -2.2871013641747115 -0.18635750293811032 2.4841111140008416 0.020462305266956464 -0.73992413730452844 0.19203342706027532 -1.0325730130860915 -2.0003664186699339 -0.010981067088604406 0.050711609914467368 5.2720983861698265 -0.038526344332508969 0.021436223656209657 4.0519109012284789 -0.045435945468950176 0.0086846523115163433 -0.74828735328811902 0.015181103399509331 -0.44707915560779449 -0.013648613422224192 -0.058558488415110653 0.04730963786444016 -0.0075544448040613518 -0.2258138208482536 0.012341552285306874 0.012687054305026299 0.88494021986217386;0.86437704553662587 -0.35452513655902629 0.98607147564700359 -1.7950824258648355 -1.2823581981790597 -7.1035206771606969 0.50569665910231132 -0.33553419070020218 0.66415450289654576 -0.17200348638586446 1.4041919510570096 -0.097323980314329428 -0.1048923265075076 0.88247602167698969 -0.037038894227572797 -0.0071046325903228458 -0.45990494999523385 0.044412677922477002 -0.018460011890995619 2.2755304614848688 -0.0029235433942017761 0.6551988637474202 -0.015087079934151672 -0.23869013907916789 0.049443177197745034 -0.0097699495043704898 0.004696357694889769 0.085063980328724836 0.0043722045335191796 0.84591007458632761;1.5077685720085336 -4.3275560059314557 -7.0963659213536987 0.52438471391886521 0.076075784873469568 1.6758085373467599 0.30995781863254818 0.45825125033105557 2.9482537982540706 1.8548806804687015 -0.87118245761522151 0.20959407764213081 0.06869928774380997 5.6424874971647885 -0.0049782886658159935 0.024185713641780147 0.93075680729602694 -0.077167435719610933 -0.068185787628934638 -0.15969422237415148 0.034337673913185568 0.07071292878645434 0.076244409951954334 0.50092674075342192 0.11918396422317462 -0.019977501535157535 0.215359030410335 0.013204629086082789 -0.033580029207624804 -2.009542326115477;1.8424124305149083 -0.63573798456883246 1.7673038895776036 -2.2986764488870803 -0.13401603072890805 -9.7303743412986314 0.95205703024511457 -0.67281364558836065 0.64067183333173605 0.040221756656339161 0.52702834498922591 -0.12484445937036559 -0.10188563350016289 0.63716505948146973 0.011259483946346165 -0.017896990641291494 -0.57643692026885629 -0.026010498401664462 -0.017153236072296209 2.9401994313299831 0.031502119859183011 1.8014345135529697 0.095822464288898138 0.18660176080120505 0.098440811042821055 0.0061606860963562835 0.32213123642119451 0.049403538170145166 -0.027879822988924375 0.61161433990694591];

% Layer 2
b2 = [1.1282362083001205;1.9494709722897656];
LW2_1 = [0.19193678498145372 0.93438574592688939 3.1664839681929484 -2.0757113228813697 -0.033938215204989651 0.35420307441601862 0.82591839857805449 0.17620120711601228 -3.241772981644917 -0.17592407664154275;0.55680030398810976 5.3010297363605448 1.527722277391822 -1.6883619220438424 -0.9546415274983806 1.1556854117129913 4.268556356821966 0.58119438622304898 -1.4948333934946352 -0.66386302538633135];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.256294165406702;2];
y1_step1.xoffset = [0.00150187015894;0];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
